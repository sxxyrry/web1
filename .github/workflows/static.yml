# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Setup Python
        uses: actions/setup-python@v5.1.1
        with:
          # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
          python-version: 3.12
          # File containing the Python version to use. Example: .python-version
          python-version-file: 3.12
          # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv, poetry.
          cache: None
          # The target architecture (x86, x64) of the Python or PyPy interpreter.
          architecture: None
          # Set this option if you want the action to check for the latest available version that satisfies the version spec.
          check-latest: None
          # The token used to authenticate when fetching Python distributions from https://github.com/actions/python-versions. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          token: ${{ github.server_url == 'https://github.com' && github.token || '' }} # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
          # Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: None
          # Set this option if you want the action to update environment variables.
          update-environment: true # optional, default is true
          # When 'true', a version range passed to 'python-version' input will match prerelease versions if no GA versions are found. Only 'x.y' version range is supported for CPython.
          allow-prereleases: None
      - name: HTML Preview
        # You may pin to the exact commit or the version.
        # uses: pavi2410/html-preview-action@9420cd81fbbe0035f59a39536ea5a0443daffa37
        uses: pavi2410/html-preview-action@v2
        with:
          # The HTML file you want to preview, relative to the root of the repo
          html_file: index.html # default is index.html
          
          
